#include <stdio.h>

#define NO 0	// ложь
#define YES 1	// истина
#define MAXLEN 500	// размер массива, хранящего строку

int main(void)
{
	char line[MAXLEN], *in_ptr, *word_ptr, *maxword_ptr, *maxwordend_ptr, c;
	int flag, maxlen, len;

	gets_s(line, MAXLEN - 1);	// вводим строку с клавиатуры в массив line
	in_ptr = line;	// указатель на текущий элемент начального массива
	word_ptr = line;	// указатель на начало текущего слова
	maxword_ptr = line;	// указатель на начало самого длинного слова
	maxwordend_ptr = line;	// указатель на конец самого длинного слова
	len = 0;	// длина текущего слова
	maxlen = 0;	// длина максимального слова
	flag = NO;	// признак слова

	// пока не найдем символ конца строки
	do {
		c = *in_ptr;	// запоминаем текущий символ

		if (c == ' ' || c == '.' || c == ',' || c == '\n' || c == '\0')
		{
			// если текущий символ разделитель
			if (flag == YES)
			{
				// если только вышли из слова
				if (len > maxlen)
				{
					// если текущая длина больше максимальной
					// значит найдено новое самое длинное слово
					maxword_ptr = word_ptr;	// запоминаем адрес его начала
					maxwordend_ptr = in_ptr;// запоминаем адрес его конца
					maxlen = len;	// запоминаем его длину
				}
				flag = NO;	// опускаем флаг признака слова
			}
		}
		else
		{
			// если текущий символ не разделитель
			if (flag == NO)
			{
				// если только зашли в слово
				word_ptr = in_ptr;	// запоминаем адрес его начала
				len = 0;	// обнуляем счетчик его длины
				flag = YES;	// поднимаем флаг признака слова
			}
			len++;	// прибавляем елиницу к длине слова
		}

		in_ptr++;	// переходим к следующему элементу строки
	} while (c != '\0');

	// цикл удаления самого длинного слова
	// с адреса конца этого слова до адреса конца строки
	while (maxwordend_ptr <= in_ptr)
		*maxword_ptr++ = *maxwordend_ptr++;	// перезаписываем символы в строке

	puts(line);	// выводим массив на экран
	getchar();
	return 0;
}
